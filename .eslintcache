[{"/media/user/D41/projects/node-react/src/index.js":"1","/media/user/D41/projects/node-react/src/App.js":"2","/media/user/D41/projects/node-react/src/components/Sider.js":"3","/media/user/D41/projects/node-react/src/components/Page.js":"4","/media/user/D41/projects/node-react/src/components/Header.js":"5","/media/user/D41/projects/node-react/src/pages/Home.js":"6","/media/user/D41/projects/node-react/src/pages/Profile.js":"7","/media/user/D41/projects/node-react/src/pages/SignUp.js":"8","/media/user/D41/projects/node-react/src/pages/SignIn.js":"9","/media/user/D41/projects/node-react/src/utils/PrivateRoute.js":"10","/media/user/D41/projects/node-react/src/utils/ErrorBoundary.js":"11","/media/user/D41/projects/node-react/src/hooks/useChat.js":"12","/media/user/D41/projects/node-react/src/hooks/usePost.js":"13","/media/user/D41/projects/node-react/src/hooks/useBeforeUnload.js":"14","/media/user/D41/projects/node-react/src/constants/validateMessages.js":"15","/media/user/D41/projects/node-react/src/hooks/useQuery.js":"16","/media/user/D41/projects/node-react/src/components/reusable/FormInput.js":"17","/media/user/D41/projects/node-react/src/pages/Users.js":"18","/media/user/D41/projects/node-react/src/constants/urls.js":"19","/media/user/D41/projects/node-react/src/reducers/currentUserContext.js":"20"},{"size":312,"mtime":1618571802748,"results":"21","hashOfConfig":"22"},{"size":4548,"mtime":1620730421513,"results":"23","hashOfConfig":"22"},{"size":718,"mtime":1618931189508,"results":"24","hashOfConfig":"22"},{"size":244,"mtime":1610719570106,"results":"25","hashOfConfig":"22"},{"size":2578,"mtime":1620750094367,"results":"26","hashOfConfig":"22"},{"size":132,"mtime":1610367116462,"results":"27","hashOfConfig":"22"},{"size":6991,"mtime":1620733988284,"results":"28","hashOfConfig":"22"},{"size":2384,"mtime":1618925742430,"results":"29","hashOfConfig":"22"},{"size":2121,"mtime":1620735168179,"results":"30","hashOfConfig":"22"},{"size":1119,"mtime":1623925022493,"results":"31","hashOfConfig":"22"},{"size":764,"mtime":1618496764727,"results":"32","hashOfConfig":"22"},{"size":1921,"mtime":1620747132882,"results":"33","hashOfConfig":"22"},{"size":647,"mtime":1620734330869,"results":"34","hashOfConfig":"22"},{"size":684,"mtime":1618482309500,"results":"35","hashOfConfig":"22"},{"size":619,"mtime":1617895506441,"results":"36","hashOfConfig":"22"},{"size":1054,"mtime":1620735294231,"results":"37","hashOfConfig":"22"},{"size":581,"mtime":1618995737686,"results":"38","hashOfConfig":"22"},{"size":976,"mtime":1618838301578,"results":"39","hashOfConfig":"22"},{"size":192,"mtime":1620749735706,"results":"40","hashOfConfig":"22"},{"size":84,"mtime":1620729851172,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"n9heoy",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"/media/user/D41/projects/node-react/src/index.js",[],["86","87"],"/media/user/D41/projects/node-react/src/App.js",[],"/media/user/D41/projects/node-react/src/components/Sider.js",[],"/media/user/D41/projects/node-react/src/components/Page.js",[],"/media/user/D41/projects/node-react/src/components/Header.js",["88"],"import React, { useEffect, useContext } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Dropdown, Menu, Switch, Button, Spin } from \"antd\";\nimport {\n    DownOutlined,\n    UserOutlined,\n    EditOutlined,\n    FileOutlined,\n    LogoutOutlined,\n} from \"@ant-design/icons\";\nimport { useQuery } from \"../hooks/useQuery\";\nimport { CurrentUserContext } from \"../reducers/currentUserContext\";\n\nconst Header = (props) => {\n    const { data, loading } = useQuery(\"user\");\n    const history = useHistory();\n    const { title, theme, onChangeTheme } = props;\n    const [currentUser, setCurrentUser] = useContext(CurrentUserContext);\n    const logOut = () => {\n        localStorage.removeItem(\"token\");\n        setCurrentUser(null);\n        history.push(\"/login\");\n    };\n\n    useEffect(() => {\n        setCurrentUser({ ...data });\n    }, [data]);\n\n    const menu = (\n        <Menu>\n            <Menu.Item key='/profile'>\n                <Link to='/profile'>\n                    <UserOutlined />\n                    Profile\n                </Link>\n            </Menu.Item>\n            <Menu.Item key='/edit-profile'>\n                <Link to='/edit-profile'>\n                    <EditOutlined />\n                    Edit Profile\n                </Link>\n            </Menu.Item>\n            <Menu.Item key='/files'>\n                <Link to='/files'>\n                    <FileOutlined />\n                    Files\n                </Link>\n            </Menu.Item>\n            <Menu.Divider />\n            <Menu.Item danger={true} key='3' onClick={logOut}>\n                <LogoutOutlined />\n                Logout\n            </Menu.Item>\n        </Menu>\n    );\n\n    return (\n        <>\n            <h1>{title}</h1>\n            <div>\n                <Switch checked={theme} onChange={onChangeTheme} />\n                {currentUser ? (\n                    <Dropdown overlay={menu} trigger={[\"click\"]}>\n                        <Button onClick={(e) => e.preventDefault()}>\n                            {loading ? (\n                                <Spin size='small' />\n                            ) : (\n                                currentUser.username\n                            )}\n                            <DownOutlined />\n                        </Button>\n                    </Dropdown>\n                ) : (\n                    <>\n                        <Link to='/login'>Sign in</Link> |\n                        <Link to='/register'>Sign up</Link>\n                    </>\n                )}\n            </div>\n        </>\n    );\n};\n\nexport default Header;\n","/media/user/D41/projects/node-react/src/pages/Home.js",[],"/media/user/D41/projects/node-react/src/pages/Profile.js",["89","90"],"import React, { useState, useEffect, useContext } from \"react\";\nimport {\n    Row,\n    Col,\n    Card,\n    Avatar,\n    Typography,\n    Form,\n    Button,\n    message,\n    Spin,\n} from \"antd\";\nimport { UserOutlined, CameraOutlined } from \"@ant-design/icons\";\nimport { useQuery } from \"../hooks/useQuery\";\nimport { validateMessages } from \"../constants/validateMessages\";\nimport FormInput from \"../components/reusable/FormInput\";\nimport { usePost } from \"../hooks/usePost\";\nimport { BACKEND_IMAGES } from \"../constants/urls\";\nimport { CurrentUserContext } from \"../reducers/currentUserContext\";\n\nconst Profile = () => {\n    const { data, loading, refetch } = useQuery(\"user\");\n    const [loadingAvatar, setLoadingAvatar] = useState(false);\n    const [formData, setFormData] = useState({\n        currentPassword: null,\n        newPassword: null,\n    });\n\n    const postData = usePost(\"updateUser\");\n    const updateAvatar = usePost(\"updateAvatar\");\n    const [currentUser, setCurrentUser] = useContext(CurrentUserContext);\n    \n    useEffect(() => {\n        setFormData({ ...data, ...formData });\n        setLoadingAvatar(false);\n    }, [data]);\n\n    const OnFinish = async () => {\n        if (\n            (formData.newPassword && !formData.currentPassword) ||\n            (!formData.newPassword && formData.currentPassword)\n        ) {\n            message.error(\"Enter the current password and new password\");\n        } else {\n            const response = await postData({ variables: { ...formData } });\n\n            if (response) {\n                refetch();\n                setCurrentUser(formData);\n                message.success(response.message);\n                setFormData({\n                    ...formData,\n                    currentPassword: null,\n                    newPassword: null,\n                });\n            }\n        }\n    };\n\n    const onChangeField = (e) => {\n        setFormData({\n            ...formData,\n            [e.target.name]: e.target.value,\n        });\n    };\n\n    const handleChangeAvatar = async (info) => {\n        setLoadingAvatar(true);\n        const file = info.target.files[0];\n        const formDataFile = new FormData();\n        formDataFile.append(\"avatar\", file);\n        try {\n            const response = await updateAvatar({ variables: formDataFile });\n\n            if (response) {\n                message.success(response.message);\n                refetch();\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    return data ? (\n        <Row gutter={16}>\n            <Col span={8}>\n                <Card className='card-user'>\n                    {data.avatar && data.avatar.data && !loadingAvatar ? (\n                        <Avatar\n                            size={100}\n                            src={BACKEND_IMAGES + data.avatar.data}\n                        />\n                    ) : loadingAvatar ? (\n                        <Avatar size={100} icon={<Spin />} />\n                    ) : (\n                        <Avatar size={100} icon={<UserOutlined />} />\n                    )}\n                    <div className='upload-avatar'>\n                        <input\n                            type='file'\n                            id='upload-avatar'\n                            onChange={handleChangeAvatar}\n                        />\n                        <label htmlFor='upload-avatar'>\n                            <CameraOutlined />\n                        </label>\n                    </div>\n                    <Typography.Title level={2}>\n                        {data.username}\n                    </Typography.Title>\n                </Card>\n            </Col>\n            <Col span={16}>\n                <Card title='Account Details'>\n                    {loading && !loadingAvatar ? (\n                        <Spin />\n                    ) : (\n                        <Form\n                            layout='vertical'\n                            onFinish={OnFinish}\n                            validateMessages={validateMessages}>\n                            <Row gutter={16}>\n                                <Col span={12}>\n                                    <FormInput\n                                        label='Name'\n                                        type='text'\n                                        name='username'\n                                        value={formData.username}\n                                        onChange={onChangeField}\n                                        rules={[{ required: true }]}\n                                    />\n                                </Col>\n                                <Col span={12}>\n                                    <FormInput\n                                        label='Email'\n                                        type='email'\n                                        name='email'\n                                        value={formData.email}\n                                        onChange={onChangeField}\n                                        rules={[\n                                            { required: true, type: \"email\" },\n                                        ]}\n                                    />\n                                </Col>\n                                <Col span={12}>\n                                    <FormInput\n                                        label='New Password'\n                                        type='password'\n                                        name='newPassword'\n                                        value={formData.newPassword}\n                                        onChange={onChangeField}\n                                        rules={[\n                                            {\n                                                min: 8,\n                                            },\n                                            {\n                                                pattern: /(?=.*\\d)(?=.*[a-z])/,\n                                            },\n                                        ]}\n                                    />\n                                </Col>\n                                <Col span={12}>\n                                    <FormInput\n                                        label='Current Password'\n                                        type='password'\n                                        name='currentPassword'\n                                        value={formData.currentPassword}\n                                        onChange={onChangeField}\n                                    />\n                                </Col>\n                            </Row>\n                            <Button type='primary' htmlType='submit'>\n                                Update Account\n                            </Button>\n                        </Form>\n                    )}\n                </Card>\n            </Col>\n        </Row>\n    ) : null;\n};\n\nexport default Profile;\n","/media/user/D41/projects/node-react/src/pages/SignUp.js",[],"/media/user/D41/projects/node-react/src/pages/SignIn.js",["91"],"import React, { useState, useContext } from \"react\";\nimport { Form, Input, Button } from \"antd\";\nimport { usePost } from \"../hooks/usePost\";\nimport { validateMessages } from \"../constants/validateMessages\";\nimport { useHistory } from \"react-router-dom\";\nimport { CurrentUserContext } from \"../reducers/currentUserContext\";\n\nconst SignIn = () => {\n    const history = useHistory();\n    const [user, setUser] = useState({\n        email: null,\n        password: null,\n    });\n    const [currentUser, setCurrentUser] = useContext(CurrentUserContext);\n\n    const postData = usePost(\"login\");\n\n    const OnFinish = async () => {\n        const response = await postData({\n            variables: {\n                ...user,\n            },\n        });\n        if (response) {\n            setCurrentUser(response);\n            localStorage.setItem(\"token\", response.token);\n            history.push(\"/\");\n        }\n    };\n\n    const onChangeField = (e) => {\n        setUser({\n            ...user,\n            [e.target.name]: e.target.value,\n        });\n    };\n\n    return (\n        <Form\n            onFinish={OnFinish}\n            layout='vertical'\n            validateMessages={validateMessages}>\n            <Form.Item\n                label='Email'\n                name='email'\n                value={user.email}\n                onChange={onChangeField}\n                rules={[{ required: true, type: \"email\" }]}>\n                <Input name='email' />\n            </Form.Item>\n\n            <Form.Item\n                label='Password'\n                name='password'\n                value={user.password}\n                onChange={onChangeField}\n                rules={[\n                    {\n                        required: true,\n                        message: \"Please input your password!\",\n                    },\n                ]}>\n                <Input.Password name='password' />\n            </Form.Item>\n\n            <Form.Item>\n                <Button type='primary' htmlType='submit'>\n                    Submit\n                </Button>\n            </Form.Item>\n        </Form>\n    );\n};\n\nexport default SignIn;\n","/media/user/D41/projects/node-react/src/utils/PrivateRoute.js",[],"/media/user/D41/projects/node-react/src/utils/ErrorBoundary.js",[],"/media/user/D41/projects/node-react/src/hooks/useChat.js",[],"/media/user/D41/projects/node-react/src/hooks/usePost.js",[],"/media/user/D41/projects/node-react/src/hooks/useBeforeUnload.js",[],"/media/user/D41/projects/node-react/src/constants/validateMessages.js",[],"/media/user/D41/projects/node-react/src/hooks/useQuery.js",[],"/media/user/D41/projects/node-react/src/components/reusable/FormInput.js",[],"/media/user/D41/projects/node-react/src/pages/Users.js",[],"/media/user/D41/projects/node-react/src/constants/urls.js",[],"/media/user/D41/projects/node-react/src/reducers/currentUserContext.js",[],{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":27,"column":8,"nodeType":"98","endLine":27,"endColumn":14,"suggestions":"99"},{"ruleId":"100","severity":1,"message":"101","line":31,"column":12,"nodeType":"102","messageId":"103","endLine":31,"endColumn":23},{"ruleId":"96","severity":1,"message":"104","line":36,"column":8,"nodeType":"98","endLine":36,"endColumn":14,"suggestions":"105"},{"ruleId":"100","severity":1,"message":"101","line":14,"column":12,"nodeType":"102","messageId":"103","endLine":14,"endColumn":23},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setCurrentUser'. Either include it or remove the dependency array.","ArrayExpression",["108"],"no-unused-vars","'currentUser' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'formData'. Either include it or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.",["109"],"no-global-assign","no-unsafe-negation",{"desc":"110","fix":"111"},{"desc":"112","fix":"113"},"Update the dependencies array to be: [data, setCurrentUser]",{"range":"114","text":"115"},"Update the dependencies array to be: [data, formData]",{"range":"116","text":"117"},[853,859],"[data, setCurrentUser]",[1131,1137],"[data, formData]"]